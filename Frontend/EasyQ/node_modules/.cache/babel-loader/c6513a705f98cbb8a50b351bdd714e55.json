{"remainingRequest":"/home/ubuntu/EasyQ/Frontend/EasyQ/node_modules/babel-loader/lib/index.js!/home/ubuntu/EasyQ/Frontend/EasyQ/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/EasyQ/Frontend/EasyQ/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/EasyQ/Frontend/EasyQ/src/views/Signup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ubuntu/EasyQ/Frontend/EasyQ/src/views/Signup.vue","mtime":1647976729496},{"path":"/home/ubuntu/EasyQ/Frontend/EasyQ/node_modules/cache-loader/dist/cjs.js","mtime":1647970131595},{"path":"/home/ubuntu/EasyQ/Frontend/EasyQ/node_modules/babel-loader/lib/index.js","mtime":1647970131555},{"path":"/home/ubuntu/EasyQ/Frontend/EasyQ/node_modules/cache-loader/dist/cjs.js","mtime":1647970131595},{"path":"/home/ubuntu/EasyQ/Frontend/EasyQ/node_modules/vue-loader/lib/index.js","mtime":1647970133195}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gaW1wb3J0IExvZ2luSW1hZ2UgZnJvbSAnL1VzZXJzL3h1c2h1b25pL0Rlc2t0b3AvbG9naW4taW1hZ2UgY29weS5wbmcnCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaW5wdXQ6IHsKICAgICAgICBmaXJzdE5hbWU6IG51bGwsCiAgICAgICAgbGFzdE5hbWU6IG51bGwsCiAgICAgICAgZW1haWw6IG51bGwsCiAgICAgICAgcHdkOiAnJywKICAgICAgICBwd2RDb25maXJtZWQ6ICcnCiAgICAgIH0sCiAgICAgIGVtYWlsdmFsaWQ6IG51bGwsCiAgICAgIC8vZW1haWwgdmFsaWRhdGlvbgogICAgICBwd2RNYXRjaGVkOiB0cnVlLAogICAgICAvL2lmIGNvbmZpbWVkIHB3ZCBtYXRjaGVzIHRoZSBvcmlnaW5hbAogICAgICBMb2dpbkltYWdlOiAiaHR0cHM6Ly93d3cudWNsLmFjLnVrL3N0dWRlbnRzL3NpdGVzL3N0dWRlbnRzL2ZpbGVzL25ld19zdHVkZW50c19yZXNpemVkLnBuZyIsCiAgICAgIHJlZ2Vycm9yOiBudWxsLAogICAgICB0eXBlY2hlY2tlZDogdHJ1ZSwKICAgICAgLy9mb3IgcHdkIHR5cGUgY2hlY2sKICAgICAgaXNSZWc6IG51bGwKICAgIH07CiAgfSwKCiAgbWV0aG9kczogewogICAgbWFpbHZhbGlkYXRpb24oKSB7CiAgICAgIGNvbnN0IGVtYWlsUmVnZXggPSAvXihbQS1aYS16MC05X1wtLitdKStAKFtBLVphLXowLTlfXC0uXSkrXC4oW0EtWmEtel17Mix9KSQvOwogICAgICB0aGlzLmVtYWlsdmFsaWQgPSBlbWFpbFJlZ2V4LnRlc3QodGhpcy5pbnB1dC5lbWFpbCk7CiAgICB9LAoKICAgIHR5cGVjaGVjaygpIHsKICAgICAgdmFyIGRlY2ltYWwgPSAvXig/PS4qXGQpKD89LipbYS16XSkoPz0uKltBLVpdKSg/PS4qW15hLXpBLVowLTldKSg/IS4qXHMpLns4LDE1fSQvOwoKICAgICAgaWYgKHRoaXMuaW5wdXQucHdkLmxlbmd0aCA8IDgpIHsKICAgICAgICB0aGlzLnR5cGVjaGVja2VkID0gZmFsc2U7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5pbnB1dC5wd2QubWF0Y2goZGVjaW1hbCkpIHsKICAgICAgICB0aGlzLnR5cGVjaGVja2VkID0gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnR5cGVjaGVja2VkID0gZmFsc2U7CiAgICAgIH0KICAgIH0sCgogICAgaWZNYXRjaFB3ZCgpIHsKICAgICAgaWYgKHRoaXMucHdkID09IHRoaXMucHdkQ29uZmlybWVkKSB7CiAgICAgICAgdGhpcy5wd2RNYXRjaGVkID0gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnB3ZE1hdGNoZWQgPSBmYWxzZTsKICAgICAgfQogICAgfSwKCiAgICBhc3luYyBoYW5kbGVTaWdudXAoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgdGhpcy50eXBlY2hlY2soKTsgLy9jb25zb2xlLmxvZyh0aGlzLnR5cGVjaGVja2VkKTsKCiAgICAgICAgdGhpcy5pZk1hdGNoUHdkKCk7CgogICAgICAgIGlmICh0aGlzLnR5cGVjaGVja2VkID09IGZhbHNlIHx8IHRoaXMuZW1haWx2YWxpZCA9PSBmYWxzZSB8fCB0aGlzLnB3ZE1hdGNoZWQgPT0gZmFsc2UpIHsKICAgICAgICAgIHRocm93ICJ2YWxpZGF0aW9uIGZhaWxlZCI7CiAgICAgICAgfQoKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3QoJ2h0dHA6Ly8xMDAuMjUuMjE5LjE3L2FwaS91c2VyLy9yZWdpc3RyYXRpb24nLCB7CiAgICAgICAgICB1c2VybmFtZTogdGhpcy5pbnB1dC5lbWFpbCwKICAgICAgICAgIHBhc3N3b3JkOiB0aGlzLmlucHV0LnB3ZCwKICAgICAgICAgIGZpcnN0bmFtZTogdGhpcy5pbnB1dC5maXJzdE5hbWUsCiAgICAgICAgICBsYXN0bmFtZTogdGhpcy5pbnB1dC5sYXN0TmFtZQogICAgICAgIH0sIHsKICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgJ0NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5pc1JlZ2lzdGVyZWQgPT09IHRydWUpIHsKICAgICAgICAgIHRoaXMucmVnZXJyb3IgPSB0cnVlOwogICAgICAgICAgdGhpcy5pc1JlZyA9IHRydWU7CiAgICAgICAgICByZXR1cm4gZmFsc2U7IC8vb25zdWJtaXQgPT09IGZhbHNlCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMucmVnZXJyb3IgPSBmYWxzZTsKICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvc2lnbnVwbGluaycpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCB7CiAgICAgICAgdGhpcy5yZWdlcnJvciA9IHRydWU7CiAgICAgICAgcmV0dXJuIGZhbHNlOyAvL29uc3VibWl0ID09PSBmYWxzZQogICAgICB9CiAgICB9CgogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACAA;AACA;AACAC;AACAC,uBADA;AAEAC,sBAFA;AAGAC,mBAHA;AAIAC,eAJA;AAKAC;AALA,OADA;AAQAC,sBARA;AAQA;AACAC,sBATA;AASA;AACAC,gGAVA;AAWAC,oBAXA;AAYAC,uBAZA;AAYA;AACAC;AAbA;AAeA,GAjBA;;AAkBAC;AACAC;AACA;AACA;AACA,KAJA;;AAKAC;AACA;;AACA;AACA;AACA,OAFA,MAGA;AACA;AACA,OAFA,MAGA;AACA;AACA;AACA,KAhBA;;AAiBAC;AACA;AACA;AACA,OAFA,MAGA;AACA;AACA;AACA,KAxBA;;AAyBA;AACA;AACA,yBADA,CAEA;;AACA;;AACA;AACA;AACA;;AACA;AACAC,oCADA;AAEAC,kCAFA;AAGAC,yCAHA;AAIAC;AAJA,WAKA;AAAAC;AAAA;AAAA;AAAA,SALA;;AAMA;AAEA;AACA;AACA,uBAJA,CAIA;AACA,SALA,MAMA;AACA;AACA;AACA;AACA,OAvBA,CAwBA;AACA;AACA,qBAFA,CAEA;AACA;AAEA;;AAvDA;AAlBA","names":["data","input","firstName","lastName","email","pwd","pwdConfirmed","emailvalid","pwdMatched","LoginImage","regerror","typechecked","isReg","methods","mailvalidation","typecheck","ifMatchPwd","username","password","firstname","lastname","headers"],"sourceRoot":"src/views","sources":["Signup.vue"],"sourcesContent":["<template>\n <div class = \"signup\">\n   <div class=\"bg\">\n      <div class=\"container py-5 h-100\">\n        <div class=\"row d-flex align-items-center justify-content-center h-100\">\n          <h2 class=\"display-5\"> Sign up </h2>\n          <div class=\"col-md-8 col-lg-7 col-xl-6\">\n        <!-- <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/draw2.svg\" class=\"img-fluid\" alt=\"Phone image\"> -->\n         <img :src=\"LoginImage\" class=\"img-fluid\" alt=\"Phone image\" width=\"1500\" height=\"1500\">\n          </div>         \n            <div class=\"col-md-7 col-lg-5 col-xl-5 offset-xl-1\">\n            <div class=\"alert alert-danger\" v-show=\"regerror === true && pwdMatched === false\">\n             <strong>Sign up Failure : passwords don't match </strong>\n            </div>\n            <div class=\"alert alert-danger\" v-show=\"regerror === true && typechecked === false\">\n             <strong>Sign up Failure : password in wrong format </strong>\n            </div>\n            <div class=\"alert alert-danger\" v-show=\"regerror === true && emailvalid === false\">\n             <strong>Sign up Failure : email invalid </strong>\n            </div>\n            <div class=\"alert alert-danger\" v-show=\"regerror === true && isReg === true\">\n             <strong>Sign up Failure : This account already exists </strong>\n            </div>\n            <form @submit.prevent=\" handleSignup\">\n              <!-- Email input -->\n              <div class=\"form-outline mb-4\">\n               <label class=\"form-label\" style=\"font-size:20px;\" for=\"emailaddr\"><strong> First name </strong></label>\n                <input type=\"text\" id=\"firstname\" class=\"form-control form-control-lg\" required=\"required\" v-model=\"input.firstName\"/>\n              </div>\n\n              <div class=\"form-outline mb-4\">\n               <label class=\"form-label\" style=\"font-size:20px;\" for=\"emailaddr\"><strong> Last name </strong></label>\n                <input type=\"text\" id=\"lastname\" class=\"form-control form-control-lg\" required=\"required\" v-model=\"input.lastName\"/>\n              </div>\n\n              <div class=\"form-outline mb-4\">\n               <label class=\"form-label\" style=\"font-size:20px;\" for=\"emailaddr\"><strong>Email address </strong></label>\n                <input type=\"email\" id=\"emailaddr\" class=\"form-control form-control-lg\" required=\"required\" v-model=\"input.email\" @blur=\"mailvalidation\"/>\n              </div>\n              <div class=\"alert alert-danger\" role=\"alert\" v-if=\"emailvalid == false\">\n                    <p class=\"text-danger\"> invalid format of email address</p>\n              </div>\n    \n              <!-- Password input -->\n              <div class=\"form-outline mb-4\">\n                <label class=\"form-label\" style=\"font-size:20px;\" for=\"signuppwd\"> <strong>Password </strong></label>\n                <input type=\"password\" id=\"loginpwd\" class=\"form-control form-control-lg\" required=\"required\" v-model=\"input.pwd\"/>\n              </div>\n              <div class=\"alert alert-danger\" role=\"alert\" v-if=\"typechecked !== true\">\n                    <p class=\"text-danger\"> * At least 8 characters</p>\n                    <p class=\"text-danger\"> * A mixture of both uppercase and lowercases letters </p>\n                    <p class=\"text-danger\"> * Contains at least a special character e.g., ! @ # ? ]</p>\n              </div>\n              <div class=\"form-outline mb-4\">\n                <label class=\"form-label\" style=\"font-size:20px;\" for=\"signuppwdConfirm\"> <strong>Confirm Password </strong></label>\n                <input type=\"password\" id=\"loginpwdConfirm\" class=\"form-control form-control-lg\" required=\"required\" v-model=\"input.pwdConfirmed\" />\n              </div>  \n              <div class=\"alert alert-danger\" role=\"alert\" v-bind = \"mailvalid\" v-if=\"pwdMatched !== true\">\n                    Password does not match !\n              </div>  \n              <div class=\"d-flex justify-content-around align-items-center mb-4\">\n                \n                <router-link to = \"/signin\" > Already have an account ? Sign in here ! </router-link>\n              </div>\n    \n              <!-- Submit button -->\n              <div class=\"col-xs-3\">\n              <button type=\"submit\" class=\"btn btn-warning mr-2 btn-lg btn-block\"> Sign up</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n</template>\n\n<script>\n// import LoginImage from '/Users/xushuoni/Desktop/login-image copy.png'\nimport axios from 'axios'\n    export default {\n        data() {\n            return {\n                input: {\n                firstName : null,\n                lastName : null,\n                email : null,\n                pwd : '',\n                pwdConfirmed : ''\n                },\n                emailvalid : null, //email validation\n                pwdMatched : true, //if confimed pwd matches the original\n                LoginImage : \"https://www.ucl.ac.uk/students/sites/students/files/new_students_resized.png\",\n                regerror:null,\n                typechecked : true, //for pwd type check\n                isReg : null\n            }\n        },\n        methods:{\n            mailvalidation(){\n              const emailRegex = /^([A-Za-z0-9_\\-.+])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,})$/;\n              this.emailvalid = emailRegex.test(this.input.email);\n            },\n            typecheck(){\n                var decimal =  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/\n                if(this.input.pwd.length < 8){\n                    this.typechecked = false;\n                }\n                else if(this.input.pwd.match(decimal)){\n                    this.typechecked = true;\n                }\n                else{\n                    this.typechecked = false;\n                }\n            },\n            ifMatchPwd(){\n              if(this.pwd == this.pwdConfirmed){\n                this.pwdMatched = true;\n              }\n              else{\n                this.pwdMatched = false;\n              }            \n            },\n   async    handleSignup() {\n              try{\n              this.typecheck();\n               //console.log(this.typechecked);\n              this.ifMatchPwd();\n              if(this.typechecked == false || this.emailvalid == false || this.pwdMatched == false ){\n                throw \"validation failed\"\n              }\n              const response = await axios.post('http://100.25.219.17/api/user//registration',{\n                username:this.input.email,\n                password:this.input.pwd,\n                firstname:this.input.firstName,\n                lastname:this.input.lastName,\n                },{headers: {'Content-type': 'application/json',}});\n               if(response.data.isRegistered === true){\n\n                this.regerror = true;\n                this.isReg = true;\n                return false;//onsubmit === false\n               }\n               else {\n                  this.regerror = false;\n                  this.$router.push('/signuplink');\n               }\n              }\n              catch{\n                this.regerror = true;\n                return false; //onsubmit === false\n              }\n              \n            }\n        }\n    }\n</script>\n\n<style scoped>\n</style>\n"]}]}